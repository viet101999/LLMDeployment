from typing import Any, Optional

from pydantic import BaseModel, Field

class LLMInput(BaseModel):
    prompt: str = Field("xin ch√†o")
    max_length: Optional[int] = Field(128)

class LLMOutput(BaseModel):
    generate_text: str = Field(
        default="",
        description="text generated by the model"
    )
    error: Optional[Any] = Field(
        default=None,  # Set default to None
        description="Error information if an exception occurs"
    )

class MeasureSpeedInput(BaseModel):
    prompt: str = Field("Write a short story about a robot learning to love.")
    num_iterations: int = Field(
        default=10,
        description="number of iterations"
    )

class MeasureSpeedOutput(BaseModel):
    tokens_per_second: float = Field(
        default=0.0,
        description="tokens per second"
    )
    avg_time_per_iteration: float = Field(
        default=0.0,
        description="avg time per iteration (seconds)"
    )
    error: Optional[Any] = Field(
        default=None,  # Set default to None
        description="Error information if an exception occurs"
    )
